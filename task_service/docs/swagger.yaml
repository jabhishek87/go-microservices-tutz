basePath: /
definitions:
  Response:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: Message
        type: string
    type: object
  Task:
    properties:
      status:
        example: todo
        minLength: 3
        type: string
      title:
        description: ID     int    `json:"id" db:"id"`
        example: Title
        minLength: 3
        type: string
      user_id:
        example: 0
        type: integer
    required:
    - status
    - title
    type: object
host: localhost:9000
info:
  contact: {}
  description: Everything about taks API.
  title: Swagger Task API
  version: "0.1"
paths:
  /:
    get:
      consumes:
      - application/json
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Response'
      summary: Show the status of server.
      tags:
      - Root
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: get All tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Response'
      summary: Get Tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Add a new task
      parameters:
      - description: body of the request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Task'
      summary: Add a new task
      tags:
      - Tasks
  /api/v1/tasks/{uuid}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: UUID of task to delete
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Response'
      summary: Delete task by uuid
      tags:
      - Tasks
    get:
      consumes:
      - application/json
      description: Returns a single task
      parameters:
      - description: UUID of task to return
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Response'
      summary: Find task by uuid
      tags:
      - Tasks
    put:
      consumes:
      - application/json
      parameters:
      - description: UUID
        in: path
        name: UUID
        required: true
        type: string
      - description: body of the request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Task'
      summary: Update a existing task
      tags:
      - Tasks
schemes:
- http
- https
swagger: "2.0"
tags:
- description: Root Description
  externalDocs:
    description: Root documentation
    url: https://example.com
  name: Root
- description: Task Description
  externalDocs:
    description: Task Documentation
    url: https://example.com
  name: Tasks
